name: CI - Run Tests

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  tests:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt -r requirements-test.txt || true
          # Fallback curated installs to avoid gevent build issues on some runners
          pip install Flask==3.1.0 Flask-JWT-Extended==4.7.1 Flask-SQLAlchemy==3.1.1 SQLAlchemy==2.0.40 flasgger==0.9.7.1 flask-cors==5.0.1 Flask-Compress==1.15 marshmallow==3.26.1 pytest==8.3.5 pytest-cov==6.0.0 pytest-flask==1.2.0 pytest-asyncio==0.21.1 pytest-xdist==3.3.1 coverage==7.8.0 pillow==11.2.1 python-dotenv==1.1.0 redis==5.2.1 flask-caching==2.3.0 firebase-admin==6.8.0 requests==2.32.3 PyMySQL==1.1.1 rapidfuzz==3.6.2 google-generativeai==0.8.4 google-api-python-client==2.179.0 google-ai-generativelanguage==0.6.15 python-dateutil==2.9.0.post0 flask-limiter==3.8.0

      - name: Start services with Docker Compose
        run: |
          docker compose -f docker-compose.yml up -d

      - name: Run all tests
        env:
          FLASK_ENV: testing
          TESTING: '1'
          JWT_SECRET_KEY: test-secret-key
        run: |
          python scripts/run_all_tests.py --auto-up -n 4 --no-coverage --stop-on-failure

      - name: Upload HTML coverage (if generated)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: htmlcov
          path: htmlcov
          if-no-files-found: ignore

