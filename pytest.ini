[tool:pytest]
# Pytest configuration for unit testing
minversion = 6.0
testpaths = test
python_files = test_*.py *_test.py
python_classes = Test* *Test
python_functions = test_*
addopts = 
    --strict-markers
    --strict-config
    --verbose
    --tb=short
    --cov=src
    --cov-report=term-missing
    --cov-report=html:htmlcov
    --cov-report=xml:coverage.xml
    --cov-report=json:coverage.json
    --cov-fail-under=85
    --cov-branch
    --cov-context=test
    --disable-warnings
    --maxfail=5

# Test markers
markers =
    unit: Unit tests
    integration: Integration tests  
    functional: Functional tests
    system: System tests
    slow: Slow running tests
    security: Security tests
    performance: Performance tests
    production: Production validation tests
    database: Database tests
    network: Network and timeout tests
    external: Tests requiring external services
    load: Load testing
    stress: Stress testing
    memory: Memory testing
    concurrent: Concurrent testing

# Coverage configuration
[coverage:run]
source = src/
branch = True
omit = 
    */venv/*
    */env/*
    */migrations/*
    */test/*
    */tests/*
    */conftest.py
    */__init__.py
    */config/firebase_credentials.json
    */.pytest_cache/*
    */htmlcov/*
    */node_modules/*
    setup.py
    manage.py

[coverage:report]
show_missing = True
skip_covered = False
precision = 2
sort = Cover
exclude_lines =
    pragma: no cover
    def __repr__
    def __str__
    raise AssertionError
    raise NotImplementedError
    if __name__ == .__main__.:
    if TYPE_CHECKING:
    @abstractmethod
    @abc.abstractmethod
    class .*\bProtocol\):
    pass

[coverage:html]
directory = htmlcov
title = ZeroWasteAI API - Comprehensive Coverage Report
show_contexts = True

[coverage:xml]
output = coverage.xml

[coverage:json]
output = coverage.json
show_contexts = True